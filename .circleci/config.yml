version: 2.1
executors:
  default_container:
    docker:
      - image: cimg/ruby:3.1
        environment:
          RAILS_ENV: test
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 2.3.7
      - image: cimg/mysql:8.0
        environment:
          # MYSQL_USER:
          MYSQL_ROOT_PASSWORD: password
    working_directory: ~/photudio

commands:
  install_bundler:
    description: Bundler install
    steps:
      - run: gem install bundler -v 2.3.7

jobs:
  fetch_source_code:
    executor:
      name: default_container
    steps:
      - checkout
      - save_cache:
          key: v1-photudio-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/photudio

  bundle_dependencies:
    executor:
      name: default_container
    steps:
      - restore_cache:
          key: v1-photudio-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "api/Gemfile.lock" }}
      - install_bundler
      - run:
          name: Bundle Install Dependencies
          working_directory: api
          command: |
            bundle install
      - save_cache:
          key: v1-dependencies-{{ checksum "api/Gemfile.lock" }}
          paths:
            - api/vendor/bundle

  rspec:
    executor:
      name: default_container
    steps:
      - restore_cache:
          key: v1-photudio-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "api/Gemfile.lock" }}
      - run:
          name: Waiting for database startup
          working_directory: api
          command: |
            dockerize -wait \
            tcp://127.0.0.1:3306 -timeout 120s
      - run: mv ./api/config/database.yml.ci ./api/config/database.yml
      - install_bundler
      - run:
          #     name: Uninstall mysql2 to reinstall mysql2 with native extensions
          #     command: |
          #       bundle exec gem uninstall mysql2
          #     working_directory: api
          # - run:
          #     name: Bundle install to install mysql2 with native extensions
          command: |
            bundle install
          working_directory: api
      - run:
          name: DB create and migrate
          working_directory: api
          command: |
            bundle exec rails db:create db:migrate
      - run:
          name: Run rspec
          command: |
            mkdir tmp/test-results
            mkdir -p rspec
            TEST_FILES="$(circleci tests glob \"spec/**/*_spec.rb\" | circleci tests split --split-by=timings)"
            bundle exec rspec
          working_directory: api
      - store_test_results:
          path: api/rspec
      - store_artifacts:
          path: api/tmp/test-results
          destination: test-results

  rubocop:
    executor:
      name: default_container
    steps:
      - restore_cache:
          key: v1-photudio-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "api/Gemfile.lock" }}
      - install_bundler
      - run:
          command: |
            bundle install
          working_directory: api
      - run:
          name: Execute rubocop
          working_directory: api
          command: |
            bundle exec rubocop

workflows:
  build:
    jobs:
      - fetch_source_code
      - bundle_dependencies:
          requires:
            - fetch_source_code
      - rubocop:
          requires:
            - bundle_dependencies
      - rspec:
          requires:
            - bundle_dependencies
